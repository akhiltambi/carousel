{"version":3,"sources":["shared/CarouselSlidesData.js","components/CarouselComponent.js","App.js","serviceWorker.js","index.js"],"names":["CarouselSlidesData","image","info","source","CarouselLeftArrow","className","this","props","classNames","onClick","Component","CarouselRightArrow","CarouselIndicator","indicators","children","map","child","index","key","activeIndex","e","CarouselSlide","processedItems","createItem","CarouselItem","CarouselCaption","Carousel","carousel","React","createRef","handleMouseOut","autoplay","handleMouseOver","pauseOnHover","pause","goToSlide","bind","goToPrevSlide","goToNextSlide","state","defaultActiveIndex","elem","current","querySelector","scrollTo","top","left","offsetLeft","offsetWidth","behavior","setState","preventDefault","childrenLength","length","_isPaused","clearInterval","_interval","slideshowSpeed","setInterval","wrap","controls","leftControl","rightControl","controlClassName","onMouseOver","onMouseOut","ref","console","log","defaultProps","Item","Caption","App","style","display","flexDirection","item","src","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d38d84fd.chunk.js","sourcesContent":["// Data for carousel\r\nexport const CarouselSlidesData = [\r\n    {\r\n      image: '/assets/images/clouds-dawn-dramatic.jpg',\r\n      info: \"Beauty of nature\",\r\n      source: \"facebook\"\r\n    }, {\r\n      image: '/assets/images/dawn.jpeg',\r\n      info: \"Morning be like this\",\r\n      source: \"Snapchat\"\r\n    }, {\r\n      image: '/assets/images/europe.jpg',\r\n      info: \"Europe\",\r\n      source: \"facebook\"\r\n    }, {\r\n      image: '/assets/images/fireworks.jpg',\r\n      info: \"Love for fireworks\",\r\n      source: \"facebook\"\r\n    }, {\r\n      image: '/assets/images/great-location.jpg',\r\n      info: \"Place to visit\",\r\n      source: \"twitter\"\r\n    }, {\r\n      image:'/assets/images/le-mont-saint-michel.jpg',\r\n      info: \"City at lake\",\r\n      source: \"Google+\"\r\n    }, {\r\n      image: '/assets/images/miami-vacation.jpg',\r\n      info: \"Miami beaches\",\r\n      source: \"twitter\"\r\n    }, {\r\n      image: '/assets/images/ocean.jpg',\r\n      info: \"Vast ocean\",\r\n      source: \"twitter\"\r\n    }\r\n  ];","import React, { Component } from 'react';\r\nimport './CarouselComponent.css';\r\n\r\nclass CarouselLeftArrow extends Component {\r\n  render() {\r\n    return (\r\n      <div className={`carousel-arrow carousel-arrow-left ${this.props.classNames}`}\r\n        onClick={this.props.onClick}>\r\n        <span className=\"fa fa-2x fa-angle-left margin-5px\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass CarouselRightArrow extends Component {\r\n  render() {\r\n    return (\r\n      <div className={`carousel-arrow carousel-arrow-right ${this.props.classNames}`}\r\n        onClick={this.props.onClick}>\r\n        <span className=\"fa fa-2x fa-angle-right margin-5px\"></span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass CarouselIndicator extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    const indicators = children.map((child, index) =>\r\n      <li key={index}>\r\n        <div className={\r\n          index === this.props.activeIndex\r\n            ? \"carousel-indicator carousel-indicator-active\"\r\n            : \"carousel-indicator\"\r\n        }\r\n          onClick={e => this.props.onClick(e, index)}\r\n        />\r\n      </li>\r\n    );\r\n    return (\r\n      <ul className=\"carousel-indicators\">\r\n        {indicators}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nclass CarouselSlide extends Component {\r\n  render() {\r\n\r\n    const { children } = this.props;\r\n\r\n    const createItem = (child, index) => {\r\n      let rowClass = \"carousel-slide\";\r\n      return (\r\n        <div key={index}\r\n          className={rowClass}>\r\n          {child}\r\n        </div>\r\n      );\r\n    };\r\n\r\n    let processedItems = children.map((child, index) => {\r\n      return createItem(child, index);\r\n    });\r\n\r\n    return (\r\n      <div className=\"carousel-slides\">\r\n        <div className=\"carousel-slide-dummy\"></div>\r\n        {processedItems}\r\n        <div className=\"carousel-slide-dummy\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass CarouselItem extends Component {\r\n  render() {\r\n    return (\r\n      <div className={`carousel-slide-content ${this.props.className || ''}`}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass CarouselCaption extends Component {\r\n  render() {\r\n    return (\r\n      <div className={`carousel-slide__caption ${this.props.className || ''}`}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Carousel wrapper component\r\nclass Carousel extends Component {\r\n\r\n  static defaultProps = {\r\n    indicators: true,\r\n    controls: true,\r\n    slideshowSpeed: 4000,\r\n    defaultActiveIndex: 0,\r\n    wrap: true,\r\n    autoplay: true,\r\n    children: [],\r\n    className: \"\",\r\n    pauseOnHover: true\r\n  };\r\n\r\n  carousel = React.createRef();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.goToSlide = this.goToSlide.bind(this);\r\n    this.goToPrevSlide = this.goToPrevSlide.bind(this);\r\n    this.goToNextSlide = this.goToNextSlide.bind(this);\r\n\r\n    this.state = {\r\n      activeIndex: props.defaultActiveIndex || 0,\r\n    };\r\n\r\n  }\r\n\r\n  scrollTo(index) {\r\n    let elem = this.carousel.current.querySelector('.carousel-slides');\r\n    let children = elem.children;\r\n    elem.scrollTo({\r\n      top: 0,\r\n      left: children[index+1].offsetLeft - children[0].offsetWidth,\r\n      behavior: 'smooth'\r\n    });\r\n    // scrollIntoView flickers the screen if more than 2-3 carousels on autoplay, when animation happens. \r\n    // As it tries to bring that element in view.\r\n    // this.carousel.current.querySelector('.carousel-slides').children[index+1].scrollIntoView({\r\n    //   behaviour: 'smooth',\r\n    //   // block: 'center',\r\n    //   inline: 'center'\r\n    // });\r\n  }\r\n\r\n  goToSlide(index) {\r\n    \r\n    this.scrollTo(index);\r\n\r\n    this.setState({\r\n      activeIndex: index\r\n    });\r\n  }\r\n\r\n  goToPrevSlide(e) {\r\n    e && e.preventDefault();\r\n\r\n    let index = this.state.activeIndex;\r\n    let { children } = this.props;\r\n    let childrenLength = children.length;\r\n\r\n    if (index < 1) {\r\n      index = childrenLength;\r\n    }\r\n\r\n    --index;\r\n    \r\n    this.scrollTo(index);\r\n    \r\n    this.setState({\r\n      activeIndex: index\r\n    });\r\n  }\r\n\r\n  goToNextSlide(e) {\r\n    e && e.preventDefault();\r\n\r\n    let index = this.state.activeIndex;\r\n    let { children } = this.props;\r\n    let childrenLength = children.length - 1;\r\n\r\n    if (index >= childrenLength) {\r\n      index = -1;\r\n    }\r\n\r\n    ++index;\r\n    \r\n    this.scrollTo(index);\r\n    \r\n    this.setState({\r\n      activeIndex: index\r\n    });\r\n  }\r\n\r\n  pause() {\r\n    this._isPaused = true;\r\n    clearInterval(this._interval);\r\n    this._interval = null;\r\n  }\r\n\r\n  autoplay() {\r\n    this._isPaused = false;\r\n\r\n    clearInterval(this._interval);\r\n    this._interval = null;\r\n\r\n    if (this.props.slideshowSpeed\r\n      && this.props.autoplay\r\n      && !this._isPaused) {\r\n      this._interval = setInterval(this.goToNextSlide,\r\n        this.props.slideshowSpeed,\r\n      );\r\n    }\r\n  }\r\n\r\n  handleMouseOut = () => {\r\n    this.autoplay();\r\n  };\r\n\r\n  handleMouseOver = () => {\r\n    if (this.props.pauseOnHover) this.pause();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.goToSlide(this.state.activeIndex);\r\n    this.autoplay();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children,\r\n      wrap,\r\n      controls,\r\n      indicators,\r\n      className\r\n    } = this.props;\r\n    if(!children || children.length === 0) {\r\n      return (\r\n        <div className={`carousel ${className || ''}`}>\r\n          <strong>No slides to display.</strong>\r\n        </div>\r\n      )\r\n    }\r\n    let leftControl = <></>;\r\n    let rightControl = <></>;\r\n\r\n    if (controls) {\r\n      let controlClassName = (this.state.activeIndex === 0 && !wrap ? 'carousel-arrow-disable' : '');\r\n      leftControl =\r\n        <CarouselLeftArrow\r\n          classNames={controlClassName}\r\n          onClick={e => this.goToPrevSlide(e)}\r\n        />;\r\n\r\n      controlClassName = ((this.state.activeIndex === (children.length - 1) && !wrap) ? 'carousel-arrow-disable' : '');\r\n      rightControl =\r\n        <CarouselRightArrow\r\n          classNames={controlClassName}\r\n          onClick={e => this.goToNextSlide(e)}\r\n        />;\r\n\r\n    }\r\n    return (\r\n      <div className={`carousel ${className || ''}`}\r\n        onMouseOver={this.handleMouseOver}\r\n        onMouseOut={this.handleMouseOut}\r\n        ref={this.carousel}>\r\n        {leftControl}\r\n        {rightControl}\r\n        <CarouselSlide\r\n          activeIndex={this.state.activeIndex}\r\n        >\r\n          {children}\r\n        </CarouselSlide>\r\n        {indicators\r\n          ? <CarouselIndicator\r\n            activeIndex={this.state.activeIndex}\r\n            onClick={(e, index) => this.goToSlide(index)}\r\n          >\r\n            {children}\r\n          </CarouselIndicator>\r\n          : <></>}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this._interval);\r\n    this._interval = null;\r\n    console.log('unmounting');\r\n  }\r\n\r\n}\r\n\r\nCarousel.Item = CarouselItem;\r\nCarousel.Caption = CarouselCaption;\r\n\r\nexport default Carousel;\r\n","import React from 'react';\r\nimport { CarouselSlidesData } from './shared/CarouselSlidesData';\r\nimport Carousel from './components/CarouselComponent';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n        \r\n        {/*  Carousel with all options enabled */}\r\n        <Carousel className=\"height half-width adjust-content-height\"\r\n          wrap={true}\r\n          autoplay={true}\r\n          controls={true}\r\n          slideshowSpeed={4000}\r\n          defaultActiveIndex={3}\r\n          pauseOnHover={true}\r\n          indicators={true}\r\n        >\r\n          {CarouselSlidesData.map((item, index) =>\r\n            <Carousel.Item key={index}>\r\n              <img src={item.image}\r\n                alt={item.info + ', ' + item.source} />\r\n              <Carousel.Caption>\r\n                <p>\r\n                  <strong className=\"info\">{item.info}</strong>\r\n                  {\" \"}\r\n                  <small className=\"source\">{item.source}</small>\r\n                </p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n          )}\r\n        </Carousel>\r\n\r\n        {/*  Carousel with autoplay off and wrap off */}\r\n        <Carousel className=\"height half-width adjust-content-height\"\r\n          wrap={false}\r\n          autoplay={false}\r\n          controls={true}\r\n          slideshowSpeed={4000}\r\n          defaultActiveIndex={0}\r\n          indicators={true}\r\n        >\r\n          {CarouselSlidesData.map((item, index) =>\r\n            <Carousel.Item key={index}>\r\n              <img src={item.image}\r\n                alt={item.info + ', ' + item.source} />\r\n              <Carousel.Caption>\r\n                <p>\r\n                  <strong className=\"info\">{item.info}</strong>\r\n                  {\" \"}\r\n                  <small className=\"source\">{item.source}</small>\r\n                </p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n          )}\r\n        </Carousel>\r\n      </div>\r\n\r\n      <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n\r\n        {/*  Carousel with autoplay off but wrap on and with controls and indicators visibles */}\r\n        <Carousel className=\"height half-width adjust-content-height\"\r\n          wrap={true}\r\n          autoplay={false}\r\n          controls={true}\r\n          slideshowSpeed={0}\r\n          defaultActiveIndex={CarouselSlidesData.length-1}\r\n          indicators={true}\r\n        >\r\n          {CarouselSlidesData.map((item, index) =>\r\n            <Carousel.Item key={index}>\r\n              <img src={item.image}\r\n                alt={item.info + ', ' + item.source} />\r\n              <Carousel.Caption>\r\n                <p>\r\n                  <strong className=\"info\">{item.info}</strong>\r\n                  {\" \"}\r\n                  <small className=\"source\">{item.source}</small>\r\n                </p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n          )}\r\n        </Carousel>\r\n\r\n        {/*  Carousel with autoplay on and wrap on but controls and indicators hidden */}\r\n        <Carousel className=\"height half-width adjust-content-height\"\r\n          wrap={true}\r\n          autoplay={true}\r\n          controls={false}\r\n          slideshowSpeed={3000}\r\n          defaultActiveIndex={0}\r\n          pauseOnHover={true}\r\n          indicators={false}\r\n        >\r\n          {CarouselSlidesData.map((item, index) =>\r\n            <Carousel.Item key={index}>\r\n              <img src={item.image}\r\n                alt={item.info + ', ' + item.source} />\r\n              <Carousel.Caption>\r\n                <p>\r\n                  <strong className=\"info\">{item.info}</strong>\r\n                  {\" \"}\r\n                  <small className=\"source\">{item.source}</small>\r\n                </p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n          )}\r\n        </Carousel>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}